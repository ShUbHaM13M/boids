/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_vector2_free(a: number): void;
export function __wbg_get_vector2_x(a: number): number;
export function __wbg_set_vector2_x(a: number, b: number): void;
export function __wbg_get_vector2_y(a: number): number;
export function __wbg_set_vector2_y(a: number, b: number): void;
export function vector2_add_vec(a: number, b: number): void;
export function vector2_sub_vec(a: number, b: number): void;
export function vector2_div(a: number, b: number): void;
export function vector2_mul(a: number, b: number): void;
export function vector2_limit(a: number, b: number): void;
export function vector2_length(a: number): number;
export function vector2_normalize(a: number): void;
export function vector2_set_mag(a: number, b: number): void;
export function vector2_distance(a: number, b: number): number;
export function __wbg_boid_free(a: number): void;
export function __wbg_get_boid_position(a: number): number;
export function __wbg_set_boid_position(a: number, b: number): void;
export function __wbg_get_boid_velocity(a: number): number;
export function __wbg_set_boid_velocity(a: number, b: number): void;
export function __wbg_get_boid_acceleration(a: number): number;
export function __wbg_set_boid_acceleration(a: number, b: number): void;
export function __wbg_get_boid_visual_range(a: number): number;
export function __wbg_set_boid_visual_range(a: number, b: number): void;
export function __wbg_get_boid_protected_range(a: number): number;
export function __wbg_set_boid_protected_range(a: number, b: number): void;
export function __wbg_get_boid_max_speed(a: number): number;
export function __wbg_set_boid_max_speed(a: number, b: number): void;
export function __wbg_get_boid_max_force(a: number): number;
export function __wbg_set_boid_max_force(a: number, b: number): void;
export function __wbg_get_boid_turn_factor(a: number): number;
export function __wbg_set_boid_turn_factor(a: number, b: number): void;
export function __wbg_boids_free(a: number): void;
export function __wbg_get_boids_avoid_factor(a: number): number;
export function __wbg_set_boids_avoid_factor(a: number, b: number): void;
export function __wbg_get_boids_matching_factor(a: number): number;
export function __wbg_set_boids_matching_factor(a: number, b: number): void;
export function __wbg_get_boids_centering_factor(a: number): number;
export function __wbg_set_boids_centering_factor(a: number, b: number): void;
export function __wbg_get_boids_max_force(a: number): number;
export function __wbg_set_boids_max_force(a: number, b: number): void;
export function __wbg_get_boids_max_speed(a: number): number;
export function __wbg_set_boids_max_speed(a: number, b: number): void;
export function boids_new(a: number): number;
export function boids_get_children(a: number, b: number): void;
export function boids_randomize(a: number, b: number, c: number): void;
export function boids_check_edges(a: number, b: number, c: number): void;
export function boids_flock(a: number): void;
export function boids_update(a: number): void;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
